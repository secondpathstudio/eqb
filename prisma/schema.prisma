// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  password  String
  role      String   @default("user")
  questionsCreated Int
  questionsAnswered Int
  questionsApproved Int
  questionsDisapproved Int
  questionVotes QuestionVote[]

  @@index([email], name: "userEmail")
  @@index([name], name: "userName")
  @@index([role], name: "userRole")
}

model Question {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  questionText  String
  topic         String
  trainingLevel String
  answers       Answer[]
  aiModelUsed         String
  numberOfCorrectAnswers Int
  numberOfIncorrectAnswers Int
  approvals     Int
  disapprovals  Int
  questionVotes QuestionVote[]

  @@index([questionText], name: "questionText")
}

model Answer {
  id         String   @id @default(cuid())
  updatedAt  DateTime @updatedAt
  answerText String
  isCorrect  Boolean
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  numberOfSelections Int

  @@index([id])
  @@index([questionId])
}

model QuestionVote {
  updatedAt  DateTime @updatedAt
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  approved   Boolean

  @@unique([userId, questionId])
  @@index([questionId])
  @@index([userId])
}
